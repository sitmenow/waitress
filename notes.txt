


Lista de turnos
 - Primer request me trae los que estan actualmente formados
 - Se deben estar escuchando los nuevos turnos que van llegando a partir de cierto indice (id del ultimo que tienes)
 - Los turnos deben ser del dia y su estado debe ser 'waiting'


Estados de un turno:
  - waiting: En espera de ser atendido
  - on-hold: En espera del cliente
  - canceled: Cancelado por el usuario
  - served: Atendido por el hostess
  - rejected: Cancelado por el hostess por no presentarse
  - removed: Eliminado por el hostess mientras esperaba

Turno:
 - id
 - customer_id
 - branch_id
 - name
 - status
 - requested_time / requested_at
 - expected_serve_time

Log de turno:
 - Cambio de estado
 - Cambio de nombre
 - Cambio de tiempo de atencion $$$

Usuarios premium:
 - Introducir turno de acuerdo a prediccion
   Ejemplo: si el usuario desea que dentro de X tiempo o a X hora el quiere estar entrando al restaurante
   el sistema debe ser capaz de predecir en que momento crear su turno. Lo anterior no requiere o no
   deberia requerir alterar el orden de la lista de turnos

   SI Y SOLO SI EL TIEMPO SOLICITADO ES MAYOR O IGUAL AL TIEMPO ACTUAL DE ESPERA
   WE WILL ALWAYS RESPECT THE TIME OF A REQUESTED TURN

 - En caso de que el turno de atencion alcance al turno solicitado por prediccion,
   se dejara que el turno permanezca vivo por el tiempo restante de la prediccion.
   Se dejaran pasar los turnos siguientes, uno a uno, en lo que el cliente en cuestion
   se presenta.


EXTRAS:
 - Cuando un branch cierra el dia, todos sus tickets actuales se van a rejected





GAS API:
GET    /gasolineras
GET    /gasolineras/:gasolinera-id
PUT    /gasolineras/:gasolinera-id -> Activar/Desactivar
GET    /gasolineras/:gasolinera-id/turnos
POST   /gasolineras/:gasolinera-id/turnos
GET    /gasolineras/:gasolinera-id/turnos/:turno-id

GET /sign-in

GET /
   si hay registro -> /
   no hay registr -> gasolineras




ALL USERS ARE CUSTOMERS

Missing Use Cases:
 - User signs up
 - User creates organization -> becomes admin
 - (Pending) User invites new user to organization
 - User invites existing user to organization
 - Admin updates user role
 - User accepts invitation to organization
 - Customer lists branches
 - Customer lists all of his turns in order (of all brands)
   - Notifications for each turn or status

 - User switch role!!!
   - See everything as customer
   - See a dashboard with his brands/branches

 - (Front end) User list branches
 - (Front end) User lists own turns in branch
   - Link to see branch info
   - Info about current turns in branch
   - List of own turns in order
 - (Front end) User switches role
   - Customer switches to admin
   - Customer switches to hostess
   - Admin switches to customer
   - Admin switches to hostess








UI -> Auth0
      Auth0 -> Logged user
               Logged user -> Backend
